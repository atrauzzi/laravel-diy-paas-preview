database:
  image: postgres
  container_name: laravel-database

  volumes:
    - "/var/lib/postgresql/data"

  environment:
    POSTGRES_USER: "root"
    POSTGRES_PASSWORD: ""
    POSTGRES_DB: "laravel"

  ports:
    - "5432:5432"


queue:
  image: rabbitmq:management
  container_name: laravel-queue
  hostname: laravelqueue

  environment:
    RABBITMQ_ERLANG_COOKIE: "laravel-dev"

  ports:
    - "8081:15672"


cache:
  image: redis
  container_name: laravel-cache

  volumes:
    - "/data"

  ports:
    - "6379:6379"


email:
  dockerfile: dev.Dockerfile
  build: .
  container_name: laravel-email

  ports:
    - "8082:1080"

  entrypoint: "maildev"
  command: []


webapp:
  dockerfile: dev.Dockerfile
  build: .
  # See: https://github.com/docker/compose/pull/2458
  #image: laravel-drydock
  container_name: laravel-webapp

  volumes:
    - "./laravel:/var/www"
    - "~/.ssh:/home/.ssh"

  links:
    - queue:rabbitmq
    - cache:redis
    - database:postgres
    - email:maildev

  #
  # Development Environment Configuration
  #
  # Note: Do not put secret info like API keys here, those still belong in `.env`.
  # Note: The goal is to not have to rewrite laravel configs, just map Docker defaults to them here.
  # ToDo: Eventually docker-compose will allow variables to be interpolated.
  environment:
    APP_ENV: "local"
    APP_DEBUG: "true"
    REDIS_HOST: "redis"
    REDIS_PORT: "6379"
    CACHE_DRIVER: "redis"
    SESSION_DRIVER: "redis"
    DB_CONNECTION: "pgsql"
    DB_HOST: "postgres"
    DB_USERNAME: "postgres"
    DB_PASSWORD: ""
    DB_DATABASE: "laravel"
    QUEUE_DRIVER: "rabbitmq"
    RABBITMQ_HOST: "rabbitmq"
    RABBITMQ_PORT: "5672"
    RABBITMQ_VHOST: "/"
    RABBITMQ_LOGIN: "guest"
    RABBITMQ_PASSWORD: "guest"
    RABBITMQ_QUEUE: "laravel_laravel"
    MAIL_DRIVER: "smtp"
    MAIL_HOST: "maildev"
    MAIL_PORT: "1025"



web:
  image: nginx
#  dockerfile: nginx.Dockerfile
#  build: .
  container_name: laravel-web


#  volumes_from:
#    - webapp
#    - "webapp:nginx_conf:/etc/nginx/nginx.conf"
#    - "webapp:nginx_site:/etc/nginx/conf.d/default"
#    - "webapp:app:/var/www"

  links:
    - webapp

  ports:
    - "8080:80"

cron:
  dockerfile: dev.Dockerfile
  build: .
  container_name: laravel-cron
  # vixie cron jsut doesn't like running in a container, use devcron instead!
  entrypoint: "devcron.py"
  command: ["/etc/cron.d/laravel"]

  volumes:
    - "./laravel:/var/www"
    - "~/.ssh:/home/.ssh"

  links:
    - queue:rabbitmq
    - cache:redis
    - database:postgres
    - email:maildev

  #
  # Development Environment Configuration
  #
  # Note: Do not put secret info like API keys here, those still belong in `.env`.
  # Note: The goal is to not have to rewrite laravel configs, just map Docker defaults to them here.
  # ToDo: Eventually docker-compose will allow variables to be interpolated.
  environment:
    APP_ENV: "local"
    APP_DEBUG: "true"
    REDIS_HOST: "redis"
    REDIS_PORT: "6379"
    CACHE_DRIVER: "redis"
    SESSION_DRIVER: "redis"
    DB_CONNECTION: "pgsql"
    DB_HOST: "postgres"
    DB_USERNAME: "postgres"
    DB_PASSWORD: ""
    DB_DATABASE: "laravel"
    QUEUE_DRIVER: "rabbitmq"
    RABBITMQ_HOST: "rabbitmq"
    RABBITMQ_PORT: "5672"
    RABBITMQ_VHOST: "/"
    RABBITMQ_LOGIN: "guest"
    RABBITMQ_PASSWORD: "guest"
    RABBITMQ_QUEUE: "laravel_laravel"
    MAIL_DRIVER: "smtp"
    MAIL_HOST: "maildev"
    MAIL_PORT: "1025"


worker:
  dockerfile: dev.Dockerfile
  build: .
  container_name: laravel-worker
  entrypoint: "artisan"
  command: "queue:listen"

  volumes:
    - "./laravel:/var/www"

  links:
    - queue:rabbitmq
    - cache:redis
    - database:postgres
    - email:maildev

  # ToDo: Docker compose is still improving their "extends" directive. Eventually we'll be able to omit this by extending the webapp service.
  environment:
    APP_ENV: "local"
    APP_DEBUG: "true"
    REDIS_HOST: "redis"
    REDIS_PORT: "6379"
    CACHE_DRIVER: "redis"
    SESSION_DRIVER: "redis"
    DB_CONNECTION: "pgsql"
    DB_HOST: "postgres"
    DB_USERNAME: "postgres"
    DB_PASSWORD: ""
    DB_DATABASE: "laravel"
    QUEUE_DRIVER: "rabbitmq"
    RABBITMQ_HOST: "rabbitmq"
    RABBITMQ_PORT: "5672"
    RABBITMQ_VHOST: "/"
    RABBITMQ_LOGIN: "guest"
    RABBITMQ_PASSWORD: "guest"
    RABBITMQ_QUEUE: "laravel_laravel"
    MAIL_DRIVER: "smtp"
    MAIL_HOST: "maildev"
    MAIL_PORT: "1025"